// eslint-disable-next-line import/no-extraneous-dependencies
import PropTypes from 'prop-types';
import React from 'react';

import SkeletonAvatar from './SkeletonAvatar';
import SkeletonRectangle from './SkeletonRectangle';
import SkeletonText from './SkeletonText';

const animationTypes = ['wave', 'pulse'];
const skeletonVariants = ['text', 'rect', 'avatar'];

export default function Skeleton({ variant, ...props }) {
  switch (variant) {
    case 'avatar': {
      return <SkeletonAvatar {...props} />;
    }
    case 'rect': {
      return <SkeletonRectangle {...props}>&nbsp;</SkeletonRectangle>;
    }
    case 'text': {
      return <SkeletonText {...props} />;
    }
    default: {
      return <SkeletonText {...props} />;
    }
  }
}

Skeleton.propTypes = {
  /**
   * Is this the principal call to action on the page?
   */
  animation: PropTypes.oneOf(animationTypes),
  /**
   * Avatar Radius. If provided integer - will default to pixels.
   */
  avatarRadius: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),
  /**
   * Number of skeleton lines (only for text variant)
   */
  count: PropTypes.number,
  /**
   * Disabled Skeleton animation, good for placeholders.
   */
  disableAnimation: PropTypes.bool,
  /**
   * For **`rect`** and **`text`** variants. Ignored on **`avatar`**.
   */
  height: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),
  /**
   * Height of of rect or text block (not applicable to Avatar)
   */
  lineHeight: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),
  /**
   * Corner radius on **`text`** and **`rect`** variants. Use **`avatarRadius`** for **`avatar`**.
   */
  radius: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),
  /**
   * Only for **`avatar`**. Ignored on **`rect`** or **`text`** variants.)
   */
  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),
  /**
   * Base color. <br/>**NB**: Currently supporting RBG format: <br/>`###, ###, ###` and not rgba string.
   */
  skeletonColor: PropTypes.string,
  /**
   * Shine color. <br/>**NB**: Currently supporting RBG format: <br/>`###, ###, ###` and not rgba string.
   */
  skeletonShineColor: PropTypes.string,
  /**
   * Space skeleton elements
   */
  space: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),
  /**
   * Speed of the shine.
   */
  speed: PropTypes.number,
  /**
   * Skeleton variant
   */
  variant: PropTypes.oneOf(skeletonVariants),
  /**
   * For **`rect`** and **`text`** variants. Ignored on **`avatar`**.
   */
  width: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),
};

Skeleton.defaultProps = {};
