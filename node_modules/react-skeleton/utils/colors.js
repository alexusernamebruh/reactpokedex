import hexToRgb from './hexToRgb';

const isHex = colorString => /^#(?:[A-Fa-f0-9]{3}){1,2}$/.test(colorString);
const isHexButMissingHash = colorString =>
  /^(?:[A-Fa-f0-9]{3}){1,2}$/.test(colorString);

const isRgb = colorString =>
  /^((25[0-5]|2[0-4]\d|1\d{1,2}|\d\d?)\s*,\s*?){2}(25[0-5]|2[0-4]\d|1\d{1,2}|\d\d?)\s*$/.test(
    colorString
  );
const isRgba = colorString =>
  /^((25[0-5]|2[0-4]\d|1\d{1,2}|\d\d?)\s*,\s*?){2}(25[0-5]|2[0-4]\d|1\d{1,2}|\d\d?)\s*,?\s*([01]\.?\d*)?$/.test(
    colorString
  );

export function getRgbColor(colorString) {
  const hex = isHex(colorString);
  const hexNoHash = isHexButMissingHash(colorString);

  if (hex) return hexToRgb(colorString);
  if (!hex && hexNoHash) {
    throw new Error(
      "Looks like you're HEX color code is missing the # symbol."
    );
  }

  const sanitizedRgbString = colorString
    .replace('rgb(', '')
    .replace('rgba(', '')
    .replace(')', '');

  const rgb = isRgb(sanitizedRgbString);
  const rgba = isRgba(sanitizedRgbString);

  if (rgb) return sanitizedRgbString;

  if (rgba) {
    const cleaned = colorString
      .split(',', 3)
      .join(',')
      .replace('rgba(', '')
      .replace(')', '');
    return cleaned;
  }
  throw new Error(
    'Color must be the values of either RGB, RGBA or HEX formats.'
  );
}
